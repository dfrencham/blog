<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on DIYDeveloper.io</title>
    <link>http://example.org/tags/javascript/</link>
    <description>Recent content in Javascript on DIYDeveloper.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Aug 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://example.org/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Nestable knockout web components</title>
      <link>http://example.org/tech/2015/08/10/knockout-web-components/</link>
      <pubDate>Mon, 10 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/tech/2015/08/10/knockout-web-components/</guid>
      <description>&lt;p&gt;Web Components are the Next-Big-Thing&amp;trade;, the second-coming, etc etc etc. Yeah, so we&amp;rsquo;ve all been hearing about web components. How can we use them in a nestable, compatible way?&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Finding a javascript performance gremlin</title>
      <link>http://example.org/tech/2015/05/30/finding-a-javascript-performance-gremlin/</link>
      <pubDate>Sat, 30 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/tech/2015/05/30/finding-a-javascript-performance-gremlin/</guid>
      <description>&lt;p&gt;Performance issues in a JS app can be frustrating&amp;hellip; especially when your app is convoluted soup of data-bound observables. Today I discovered a performance gremlin. I&amp;rsquo;ll walk you through the process of finding it and rectifying it.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>My first few hours with Visual Studio Code</title>
      <link>http://example.org/tech/2015/04/30/microsoft-code/</link>
      <pubDate>Thu, 30 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/tech/2015/04/30/microsoft-code/</guid>
      <description>&lt;p&gt;Microsoft have released a new editor. This is Microsoft&amp;rsquo;s take on Sublime/Atom. It looks nice, it feels fast, and it can run on OSX or Linux (as well as Windows). I&amp;rsquo;ve been using it for work this morning - here are my impressions.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Accidental NPM Packaging (and JSPM!)</title>
      <link>http://example.org/tech/2015/04/27/accidental-npm/</link>
      <pubDate>Mon, 27 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/tech/2015/04/27/accidental-npm/</guid>
      <description>&lt;p&gt;Last week I created a package - an NPM. I didn&amp;rsquo;t &lt;em&gt;intend&lt;/em&gt; to. I just wanted to use the Microsoft Signal-R javascript client, and I was surprised to see it wasn&amp;rsquo;t listed in the Node package repository.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Animating Aurelia</title>
      <link>http://example.org/tech/2015/04/21/animating-aurelia/</link>
      <pubDate>Tue, 21 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/tech/2015/04/21/animating-aurelia/</guid>
      <description>&lt;p&gt;Have you heard of Aurelia? It&amp;rsquo;s Rob Eisenberg&amp;rsquo;s new framework. If you travelled forward in time two years and wrote a framework based on cutting edge tech, Aurelia would be the result. Aurelia is built on technology so new that the standards haven&amp;rsquo;t been ratified yet. I&amp;rsquo;m talking ES6, ES7, transpiling, a proper module loader, lambda expressions (arrow functions), computed properties, and more.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;pure-img blog-img &#34; src=&#34;http://example.org/images/aurelia-logo.png&#34; alt=&#34;Aurelia&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now let&amp;rsquo;s use this massively powerful framework to animate a few boxes.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SPA within a SPA? Durandal child routers</title>
      <link>http://example.org/tech/2014/10/15/durandal-child-routers/</link>
      <pubDate>Wed, 15 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/tech/2014/10/15/durandal-child-routers/</guid>
      <description>&lt;p&gt;My current project had an interesting requirement come through: &amp;ldquo;We want the app to navigate to another single page app when the user clicks next on this page, but still have our widgets at the top&amp;rdquo;. The client wanted to utilise an existing durandal SPA inside a new durandal spa.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Get Angular Running in 5 minutes </title>
      <link>http://example.org/tech/2014/06/20/angular-in-5-minutes/</link>
      <pubDate>Fri, 20 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/tech/2014/06/20/angular-in-5-minutes/</guid>
      <description>&lt;p&gt;Want to try some &lt;a href=&#34;https://angularjs.org/&#34;&gt;Angular&lt;/a&gt; development? Need to get a dev environment set up? With a couple of automation tools, I&amp;rsquo;ll have you up and going in 5 minutes.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Create a Single Page App in 2 Minutes using Ember App Kit</title>
      <link>http://example.org/tech/2014/03/04/create-a-single-page-app-in-2-minutes-using-ember-app-kit/</link>
      <pubDate>Tue, 04 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/tech/2014/03/04/create-a-single-page-app-in-2-minutes-using-ember-app-kit/</guid>
      <description>&lt;p&gt;Single Pages Apps (SPAs) are the current flavour of the month. They have seemingly appeared from nowhere, but now it seems like every developer is talking about them. Wikipedia describes this pattern as follows:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A single-page application (SPA), also known as single-page interface (SPI), is a web application or web site that fits on a single web page with the goal of providing a more fluid user experience akin to a desktop application.
In a SPA, either all necessary code – HTML, JavaScript, and CSS – is retrieved with a single page load, or the appropriate resources are dynamically loaded and added to the page as necessary, usually in response to user actions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In my experience they offer some advantages over traditional apps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Very responsive&lt;/li&gt;
&lt;li&gt;Rapid development time&lt;/li&gt;
&lt;li&gt;Data is usually provided via a REST API - making integration to other systems easy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;along with some disadvantages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Usually implemented with javascript (with all baggage it brings, such as horrendous function passing syntax everywhere)&lt;/li&gt;
&lt;li&gt;Can be harder to debug - you can end up in dependency hell&lt;/li&gt;
&lt;li&gt;Common tasks such as continuous integration is harder than with more mature patterns such as MVC (example: making javascript unit tests play nice with TFS).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The high responsiveness alone makes SPAs worth of investigating. Responsive web apps == happy users!&lt;/p&gt;

&lt;p&gt;Now I&amp;rsquo;m going to show you how to build one.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linking to Google Drive images from your Blog</title>
      <link>http://example.org/tech/2014/01/22/linking-to-google-drive-images-from-your-blog/</link>
      <pubDate>Wed, 22 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/tech/2014/01/22/linking-to-google-drive-images-from-your-blog/</guid>
      <description>&lt;p&gt;A good number of us have content stored on google drive. Wouldn&amp;rsquo;t it be handy if we could reference that content in our blog posts? Good news, you can!&lt;/p&gt;

&lt;h2&gt;Steps&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Go to your google drive account.&lt;/li&gt;
&lt;li&gt;Ensure the folder the item is in, is shared (use the option &lt;i&gt;Anyone who has the link can view&lt;/i&gt;).&lt;/li&gt;
&lt;li&gt;Share the item (use the same option as above). Copy the &amp;ldquo;Link to Share&amp;rdquo; link.&lt;/li&gt;
&lt;li&gt;Paste the link in the linkifier below&lt;/li&gt;
&lt;li&gt;Copy the link produced, and insert it into your blog via any of your usual methods&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>VS2013 Web Essentials   Zen Coding is a huge time saver for web developers</title>
      <link>http://example.org/tech/2013/10/13/vs2013-web-essentials---zen-coding-is-a-huge-time-saver-for-web-developers/</link>
      <pubDate>Sun, 13 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/tech/2013/10/13/vs2013-web-essentials---zen-coding-is-a-huge-time-saver-for-web-developers/</guid>
      <description>&lt;p&gt;As a web developer, I have regularly found myself needing to type a large amount of HTML layout code. Your page starts to grow, and your eyes begin to glaze over as you type DIV after DIV.&lt;/p&gt;

&lt;p&gt;Enter &lt;a href=&#34;https://code.google.com/p/zen-coding/&#34;&gt;Zen Coding&lt;/a&gt;. In a nutshell, ZenCoding is a set of editor extensions, allowing a developer to use shorthand for common tasks. Microsoft have incorporated these extensions into &lt;a href=&#34;http://visualstudiogallery.msdn.microsoft.com/56633663-6799-41d7-9df7-0f2a504ca361&#34;&gt;Web Essentials&lt;/a&gt; for Visual Studio 2013.
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>